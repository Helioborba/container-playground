version: "3"
services:
    client:
        stdin_open: true
        #command: npm run start
        image: gaborba2100e404/container-playground_client
        build:
            context: "./client"
            dockerfile: Dockerfile
        restart: on-failure
        volumes:
            - /app/node_modules
            - 'D:/workshop/container-playground/client:/app'

        environment:
            - NODE_ENV=development
            - CHOKIDAR_USEPOLLING=true
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
        depends_on:
            - worker
    server_worker:
        stdin_open: true
        image: gaborba2100e404/container-playground_server_worker
        #command: npm run start
        build:
            context: "./serverWorker"
            dockerfile: Dockerfile
        restart: on-failure
        volumes:
            - 'D:/workshop/container-playground/serverWorker:/serverWorker'
            - 'D:/workshop/container-playground/worker/tasks:/serverWorker/tasks'
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
        depends_on:
            - redis
    worker:
        stdin_open: true
        #command: npm run start
        image: gaborba2100e404/container-playground_worker
        build:
            context: "./worker"
            dockerfile: Dockerfile
        restart: on-failure
        volumes:
            - 'D:/workshop/container-playground/worker:/worker'
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - REDIS_PASSWORD=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
        depends_on:
            - redis

    redis:
        image: redis
        restart: on-failure
        ports:
        - "6379:6379"
        command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
        volumes: 
        - ./redis/cache:/data

    nginx:
        restart: always
        image: gaborba2100e404/container-playground_nginx
        build: 
            context: ./nginx
            dockerfile: Dockerfile.dev
        ports:
            - "3000:80"
        depends_on: 
            - client
            - server_worker
        volumes: 
        - ./nginx/default_dev.conf:/etc/nginx/conf.d/default.conf
        
    postgres_db:
        image: postgres:14.3-alpine
        restart: always
        environment:
            - POSTGRES_USER=user
            - POSTGRES_PASSWORD=any
        ports:
            - '5432:5432'
        volumes: 
            - ./db/data:/var/lib/postgresql/data
    # mysql_db:
    #     build:
    #         context: "./mysql/"
    #         dockerfile: Dockerfile
    #     ports:
    #         - 3306:3306
    #     volumes:
    #         - ./mysql/Dump20220503.sql:/docker-entrypoint-initdb.d/Dump20220503.sql

    adminer:
        image: adminer
        restart: always
        ports:
        - 1000:8080